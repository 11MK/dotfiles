fading = true;
fade-in-step = 0.08;
fade-out-step = 0.08;
fade-delta = 5;
no-fading-openclose = false;
no-fading-destroyed-argb = false;
fade-steps = [ "0.03" "0.03" ];

fade-exclude = [
  "class_g = 'slop'",
  "name = 'bar'",
  "class_g = 'maim'",
  "class_g = 'mpv'",
];

transition = true;
transition-length = 200;
transition-pow-x = 0.5;
transition-pow-y = 0.05;
transition-pow-w = 0.5;
transition-pow-h = 0.5;
size-transition = true;
transition-direction = "smart-x";
transition-timing-function = "ease-out-cubic";
transition-offset = 25;
transition-step = 0.028;
transition-rule = [];

inactive-opacity = 0.95;
active-opacity = 1;
inactive-opacity-override = true;
detect-client-opacity = true;

focus-exclude = [
  "name = 'bar'",
  "class_g = 'polybar'",
  "class_g = 'Polybar'",
  "class_g = 'i3lock'",
  "class_g = 'slop'",
  "class_g = 'dmenu'",
  "class_g = 'dmenu_run'",
  "class_g *= 'GLava'",
  "class_g = 'conky'",
  "class_g = 'Rofi'",
  "class_g *= 'eww-'",
  "class_g = 'Peek'",
  "class_g = 'bspwm'"
];

daemon = true;
experimental-backends = true;
backend = "glx";

vsync = true;
dbus = true;
mark-wmwin-focused = true;

glx-no-rebind-pixmap = true;
glx-no-stencil = true;
use-damage = true;

# slide-left, slide-right, zoom, slide-top, slide-bottom, fly-in
animations = true;
animation-stiffness = 400
animation-window-mass = 0.5
animation-dampening = 30
animation-clamping = true
animation-for-open-window = "slide-left";
animation-for-unmap-window = "slide-right";
animation-for-workspace-switch-in = "slide-left";
animation-for-workspace-switch-out = "fly-in";
animation-for-transient-window = "slide-down";


log-level = "ERROR";
log-file = "/home/maker/.config/picom/log.picom.txt";
rounded-corners-exclude = [
  #"window_type = 'normal'",
#  "class_g = 'awesome'",
#  "class_g = 'URxvt'",
#  "class_g = 'XTerm'",
#  "class_g = 'kitty'",
   #"class_g = 'Alacritty'",
   "class_g = 'Polybar'",
   "class_i = 'polybar'",
   "class_g = 'eww-bar'"
#  "class_g = 'code-oss'",
#  #"class_g = 'TelegramDesktop'",
#  "class_g = 'firefox'",
#  "class_g = 'Thunderbird'"
];
# vim:ft=dosini:nowrap

#################################
#   Transparency / Opacity      #
#################################


# Opacity of inactive windows. (0.1 - 1.0, defaults to 1.0)
# inactive-opacity = 1
#inactive-opacity = 0.8;

# Opacity of window titlebars and borders. (0.1 - 1.0, disabled by default)
# frame-opacity = 1.0
#frame-opacity = 0.7;

# Default opacity for dropdown menus and popup menus. (0.0 - 1.0, defaults to 1.0)
# menu-opacity = 1.0 
# menu-opacity is depreciated use dropdown-menu and popup-menu instead.

#If using these 2 below change their values in line 510 & 511 aswell
#popup_menu = { opacity = 0.8; }
#dropdown_menu = { opacity = 0.8; }



# Let inactive opacity set by -i override the '_NET_WM_OPACITY' values of windows.
# inactive-opacity-override = true
#inactive-opacity-override = false;

# Default opacity for active windows. (0.0 - 1.0, defaults to 1.0)
# active-opacity = 0.8;

# Dim inactive windows. (0.0 - 1.0, defaults to 0.0)
# inactive-dim = 0.0

# Specify a list of conditions of windows that should always be considered focused.
# focus-exclude = []
# focus-exclude = [
#  "class_g = 'Cairo-clock'",
#  "class_g = 'Bar'",                    # lemonbar
#  "class_g = 'slop'"                    # maim
# ];

# Use fixed inactive dim value, instead of adjusting according to window opacity.
# inactive-dim-fixed = 1.0

# Specify a list of opacity rules, in the format `PERCENT:PATTERN`, 
# like `50:name *= "Firefox"`. picom-trans is recommended over this. 
# Note we don't make any guarantee about possible conflicts with other 
# programs that set '_NET_WM_WINDOW_OPACITY' on frame or client windows.
# example:
#    opacity-rule = [ "80:class_g = 'URxvt'" ];
#
# opacity-rule = []
opacity-rule = [
  "100:class_g    = 'slop'",            # maim
  "100:class_g    = 'XTerm'",
  "80:class_g    = 'kitty'",
  "100:class_g    = 'Alacritty'",
  "80:class_g     = 'Polybar'",
  "100:class_g    = 'code-oss'",
  "100:class_g    = 'Meld'",
  "70:class_g     = 'TelegramDesktop'",
  "100:class_g    = 'firefox'",
];


#################################
#     Background-Blurring       #
#################################


# Parameters for background blurring, see the *BLUR* section for more information.
# blur-method = 
blur-size = 12
#
# blur-deviation = false

# Blur background of semi-transparent / ARGB windows. 
# Bad in performance, with driver-dependent behavior. 
# The name of the switch may change without prior notifications.
#
# blur-background = true;

# Blur background of windows when the window frame is not opaque. 
# Implies:
#    blur-background 
# Bad in performance, with driver-dependent behavior. The name may change.
#
# blur-background-frame = false;


# Use fixed blur strength rather than adjusting according to window opacity.
# blur-background-fixed = false;


# Specify the blur convolution kernel, with the following format:
# example:
#   blur-kern = "5,5,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1";
#
# blur-kern = ''
# blur-kern = "3x3box";

blur: {
  # requires: https://github.com/ibhagwan/picom
  method = "kawase";
  #method = "kernel";
  strength = 7;
  # deviation = 1.0;
  # kernel = "11x11gaussian";
  background = false;
  background-frame = false;
  background-fixed = false;
  kern = "3x3box";
}

# Exclude conditions for background blur.
blur-background-exclude = [
  #"window_type = 'dock'",
  #"window_type = 'desktop'",
  #"class_g = 'URxvt'",
  #
  # prevents picom from blurring the background
  # when taking selection screenshot with `main`
  # https://github.com/naelstrof/maim/issues/130
  "class_g = 'slop'",
  "_GTK_FRAME_EXTENTS@:c",
  "class_g ?= 'zoom'"
];

#################################
#             Shadows           #
#################################


# Enabled client-side shadows on windows. Note desktop windows
# (windows with '_NET_WM_WINDOW_TYPE_DESKTOP') never get shadow,
# unless explicitly requested using the wintypes option.
#
# shadow = false
shadow = true;

# The blur radius for shadows, in pixels. (defaults to 12)
shadow-radius = 12
# shadow-radius = 7;

# The opacity of shadows. (0.0 - 1.0, defaults to 0.75)
# shadow-opacity = .75

# The left offset for shadows, in pixels. (defaults to -15)
# shadow-offset-x = -15
shadow-offset-x = -7;

# The top offset for shadows, in pixels. (defaults to -15)
# shadow-offset-y = -15
shadow-offset-y = -7;

# Avoid drawing shadows on dock/panel windows. This option is deprecated,
# you should use the *wintypes* option in your config file instead.
#
# no-dock-shadow = false

# Don't draw shadows on drag-and-drop windows. This option is deprecated, 
# you should use the *wintypes* option in your config file instead.
#
# no-dnd-shadow = false

# Red color value of shadow (0.0 - 1.0, defaults to 0).
# shadow-red = 0

# Green color value of shadow (0.0 - 1.0, defaults to 0).
# shadow-green = 0

# Blue color value of shadow (0.0 - 1.0, defaults to 0).
# shadow-blue = 0

# Do not paint shadows on shaped windows. Note shaped windows 
# here means windows setting its shape through X Shape extension. 
# Those using ARGB background is beyond our control. 
# Deprecated, use 
#   shadow-exclude = 'bounding_shaped'
# or 
#   shadow-exclude = 'bounding_shaped && !rounded_corners'
# instead.
#
# shadow-ignore-shaped = ''

# Specify a list of conditions of windows that should have no shadow.
#
# examples:
#   shadow-exclude = "n:e:Notification";
#
# shadow-exclude = []
shadow-exclude = [
  "name = 'Notification'",
  "class_g = 'Conky'",
  "class_g ?= 'Notify-osd'",
  "class_g = 'Cairo-clock'",
  "class_g = 'slop'",
  "class_g = 'Polybar'",
  "_GTK_FRAME_EXTENTS@:c",
  "name = 'cpt_frame_window'"
];

# Specify a X geometry that describes the region in which shadow should not
# be painted in, such as a dock window region. Use 
#    shadow-exclude-reg = "x10+0+0"
# for example, if the 10 pixels on the bottom of the screen should not have shadows painted on.
#
# shadow-exclude-reg = "" 

# Crop shadow of a window fully on a particular Xinerama screen to the screen.
# xinerama-shadow-crop = false

